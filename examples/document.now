[program]
full_name "Now Document Example"
description "Show how the document syntax works"

[build]
dir "${env.home}/.til/document-example"

[build/packages/build]
# Packages needed to build this program


[build/packages/run]
# Packages needed to run this program
http {
    source "https://github.com/til-lang/til-http.git"
    branch master
}

[# Document format inside code]
# This is a comment section.

set d <{
    alfa 1
    beta 2
}>

range 10 | foreach i {
    print $i
}

[configuration/hello]
salute_word {
    type string
    default "Hello"
}

[constants/math]
pi 3.1415

[system_commands/compose]
command "docker compose"
which "docker compose -h"
parameters {
    command {
        type string
    }
}


[procedures/hello]
parameters {
    name {
        type string
        description "The name of whoever is going to be saluted"
    }
    times {
        type int
        description "How many times the procedure should salute"
        default 1
    }
}


# Configuration variables are global, so you only
# need to specify the full "path" when really needed:
# print ($configuration . hello . salute_word) ", $name!"
print "procedures/hello: name=$name times=$times salute_word=$salute_word"
print "                  hello.salute_word: $hello.salute_word"
range.silent 1 $times | {
    print "$salute_word, $name!"
}

error "Test error" 123 "generic-error"
print "POST ERROR: we should never reach this command."

[procedures/hello/on.error]

stack.pop | as error
print "Error $error"


[commands/hello]
description "Say hello to someone."
parameters {
    # Some stuff seems repetitive, but this is just
    # because we are declaring another procedure,
    # which in real life would be unnecessary.
    name {
        type string
        description "The name of whoever is going to be saluted"
        default "World"
    }
    salute_word {
        type string
        description "The word used to salute"
        default "Hello"
    }
}

print "commands/hello: name=$name salute_word=$salute_word"

hello $name
hello $name (salute_word = "Hi")
hello $name (times = 3) (salute_word = "hi")


[commands/hey]
description "Say hey to someone."
parameters {}

print "hey!"
print "pi is $pi"
print "math.pi is $math.pi"


[commands/hi]
parameters {
    name {
        type string
        default "world"
    }
}

print "Hi, $name"


[commands/run]
description "Run the project using `docker compose`"
parameters {}

composer up
